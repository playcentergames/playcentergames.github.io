{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction CardComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 6);\n  }\n}\nexport class CardComponent {\n  constructor() {}\n  ngOnInit() {\n    // Get current date\n    const today = new Date();\n    // Get release date\n    const releaseDate = new Date(this.release_date);\n    // Get difference between current date and release date\n    const diff = Math.abs(today.getTime() - releaseDate.getTime());\n    // Get difference in days\n    const diffDays = Math.ceil(diff / (1000 * 3600 * 24));\n    // If difference in days is less than 30, show New Chip\n    if (diffDays < 30) {\n      this.release_date = new Date();\n    }\n  }\n  // Get current date\n  get today() {\n    return new Date();\n  }\n  // Show Chip as Upcoming if {{release_date}} is in future and show as New if {{release_date}} is in past and within 30 days\n  get chip() {\n    if (this.release_date > this.today) {\n      return 'Upcoming';\n    } else if (this.release_date < this.today && this.release_date > new Date(this.today.getTime() - 30 * 24 * 60 * 60 * 1000)) {\n      return 'New';\n    } else {\n      return '';\n    }\n  }\n  get showChip() {\n    return this.chip !== '';\n  }\n}\nCardComponent.ɵfac = function CardComponent_Factory(t) {\n  return new (t || CardComponent)();\n};\nCardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CardComponent,\n  selectors: [[\"app-card\"]],\n  inputs: {\n    imageUrl: \"imageUrl\",\n    title: \"title\",\n    description: \"description\",\n    release_date: \"release_date\"\n  },\n  decls: 8,\n  vars: 5,\n  consts: [[1, \"card\"], [1, \"card-img-top\", 3, \"src\", \"alt\"], [1, \"card-body\"], [1, \"card-title\"], [1, \"card-text\"], [\"class\", \"chip\", 4, \"ngIf\"], [1, \"chip\"]],\n  template: function CardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"img\", 1);\n      i0.ɵɵelementStart(2, \"div\", 2)(3, \"h5\", 3);\n      i0.ɵɵtext(4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"p\", 4);\n      i0.ɵɵtext(6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(7, CardComponent_div_7_Template, 1, 0, \"div\", 5);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"src\", ctx.imageUrl, i0.ɵɵsanitizeUrl)(\"alt\", ctx.title);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.title);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.description);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.release_date > ctx.today);\n    }\n  },\n  dependencies: [i1.NgIf],\n  styles: [\".card[_ngcontent-%COMP%]   .card-body[_ngcontent-%COMP%] {\\r\\n    max-width: 250px;\\r\\n}\\r\\n\\r\\n.card[_ngcontent-%COMP%]   img[_ngcontent-%COMP%] {\\r\\n    width: 100%;\\r\\n    height: 250px;\\r\\n    object-fit: cover;\\r\\n    overflow: hidden;\\r\\n}\\r\\n\\r\\n.card[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\r\\n    font-size: 0.8rem;\\r\\n    overflow: hidden;\\r\\n    text-overflow: ellipsis;\\r\\n    white-space: nowrap;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY2FyZHMvY2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksV0FBVztJQUNYLGFBQWE7SUFDYixpQkFBaUI7SUFDakIsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksaUJBQWlCO0lBQ2pCLGdCQUFnQjtJQUNoQix1QkFBdUI7SUFDdkIsbUJBQW1CO0FBQ3ZCIiwic291cmNlc0NvbnRlbnQiOlsiLmNhcmQgLmNhcmQtYm9keSB7XHJcbiAgICBtYXgtd2lkdGg6IDI1MHB4O1xyXG59XHJcblxyXG4uY2FyZCBpbWcge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDI1MHB4O1xyXG4gICAgb2JqZWN0LWZpdDogY292ZXI7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG59XHJcblxyXG4uY2FyZCBwIHtcclxuICAgIGZvbnQtc2l6ZTogMC44cmVtO1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xyXG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":";;;;IAWQA,yBAAqD;;;AAM7D,OAAM,MAAOC,aAAa;EAMxBC,eAAe;EAEfC,QAAQ;IACN;IACA,MAAMC,KAAK,GAAG,IAAIC,IAAI,EAAE;IACxB;IACA,MAAMC,WAAW,GAAG,IAAID,IAAI,CAAC,IAAI,CAACE,YAAY,CAAC;IAC/C;IACA,MAAMC,IAAI,GAAGC,IAAI,CAACC,GAAG,CAACN,KAAK,CAACO,OAAO,EAAE,GAAGL,WAAW,CAACK,OAAO,EAAE,CAAC;IAC9D;IACA,MAAMC,QAAQ,GAAGH,IAAI,CAACI,IAAI,CAACL,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,EAAE,CAAC,CAAC;IACrD;IACA,IAAII,QAAQ,GAAG,EAAE,EAAE;MACjB,IAAI,CAACL,YAAY,GAAG,IAAIF,IAAI,EAAE;;EAElC;EAEA;EACA,IAAID,KAAK;IACP,OAAO,IAAIC,IAAI,EAAE;EACnB;EAEA;EACA,IAAIS,IAAI;IACN,IAAI,IAAI,CAACP,YAAY,GAAG,IAAI,CAACH,KAAK,EAAE;MAClC,OAAO,UAAU;KAClB,MACI,IAAI,IAAI,CAACG,YAAY,GAAG,IAAI,CAACH,KAAK,IAAI,IAAI,CAACG,YAAY,GAAG,IAAIF,IAAI,CAAC,IAAI,CAACD,KAAK,CAACO,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,EAAE;MACxH,OAAO,KAAK;KACb,MACI;MACH,OAAO,EAAE;;EAEb;EAEA,IAAII,QAAQ;IACV,OAAO,IAAI,CAACD,IAAI,KAAK,EAAE;EACzB;;AA3CWb,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAe;EAAAC;IAAAC;IAAAC;IAAAC;IAAAb;EAAA;EAAAc;EAAAC;EAAAC;EAAAC;IAAA;MAZtBxB,8BAAkB;MAChBA,yBAA2D;MAC3DA,8BAAuB;MACEA,YAAW;MAAAA,iBAAK;MACvCA,4BAAqB;MAAAA,YAAiB;MAAAA,iBAAI;MAE1CA,8DAAqD;MACvDA,iBAAM;;;MANDA,eAAgB;MAAhBA,oDAAgB;MAEIA,eAAW;MAAXA,+BAAW;MACbA,eAAiB;MAAjBA,qCAAiB;MAEnBA,eAA0B;MAA1BA,mDAA0B","names":["i0","CardComponent","constructor","ngOnInit","today","Date","releaseDate","release_date","diff","Math","abs","getTime","diffDays","ceil","chip","showChip","selectors","inputs","imageUrl","title","description","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\Projects\\playcenterWebApp\\src\\app\\cards\\card.component.ts"],"sourcesContent":["import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-card',\r\n  template: `\r\n    <div class=\"card\">\r\n      <img [src]=\"imageUrl\" class=\"card-img-top\" [alt]=\"title\" />\r\n      <div class=\"card-body\">\r\n        <h5 class=\"card-title\">{{ title }}</h5>\r\n        <p class=\"card-text\">{{ description }}</p>\r\n        <!-- -->\r\n        <div class=\"chip\" *ngIf=\"release_date > today\"></div>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styleUrls: ['./card.component.css'],\r\n})\r\nexport class CardComponent {\r\n  @Input() imageUrl!: string;\r\n  @Input() title!: string;\r\n  @Input() description!: string;\r\n  @Input() release_date!: Date;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n    // Get current date\r\n    const today = new Date();\r\n    // Get release date\r\n    const releaseDate = new Date(this.release_date);\r\n    // Get difference between current date and release date\r\n    const diff = Math.abs(today.getTime() - releaseDate.getTime());\r\n    // Get difference in days\r\n    const diffDays = Math.ceil(diff / (1000 * 3600 * 24));\r\n    // If difference in days is less than 30, show New Chip\r\n    if (diffDays < 30) {\r\n      this.release_date = new Date();\r\n    }\r\n  }\r\n\r\n  // Get current date\r\n  get today() {\r\n    return new Date();\r\n  }\r\n\r\n  // Show Chip as Upcoming if {{release_date}} is in future and show as New if {{release_date}} is in past and within 30 days\r\n  get chip() {\r\n    if (this.release_date > this.today) {\r\n      return 'Upcoming';\r\n    }\r\n    else if (this.release_date < this.today && this.release_date > new Date(this.today.getTime() - 30 * 24 * 60 * 60 * 1000)) {\r\n      return 'New';\r\n    }\r\n    else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  get showChip() {\r\n    return this.chip !== '';\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}