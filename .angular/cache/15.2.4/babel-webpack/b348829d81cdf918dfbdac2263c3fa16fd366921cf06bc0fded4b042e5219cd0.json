{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { InjectionToken, isDevMode, Component, ChangeDetectionStrategy, Inject, Optional, Input, NgModule } from '@angular/core';\nimport { start, end } from 'perf-marks/marks';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nfunction NgxSkeletonLoaderComponent_div_0_ng_content_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 0, [\"*ngIf\", \"appearance  === 'custom-content'\"]);\n  }\n}\nconst _c0 = function (a0, a1, a2, a3, a4) {\n  return {\n    \"custom-content\": a0,\n    circle: a1,\n    progress: a2,\n    \"progress-dark\": a3,\n    pulse: a4\n  };\n};\nfunction NgxSkeletonLoaderComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵtemplate(1, NgxSkeletonLoaderComponent_div_0_ng_content_1_Template, 1, 0, \"ng-content\", 2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction5(5, _c0, ctx_r0.appearance === \"custom-content\", ctx_r0.appearance === \"circle\", ctx_r0.animation === \"progress\", ctx_r0.animation === \"progress-dark\", ctx_r0.animation === \"pulse\"))(\"ngStyle\", ctx_r0.theme);\n    i0.ɵɵattribute(\"aria-label\", ctx_r0.ariaLabel)(\"aria-valuetext\", ctx_r0.loadingText);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.appearance === \"custom-content\");\n  }\n}\nconst _c1 = [\"*\"];\nconst NGX_SKELETON_LOADER_CONFIG = new InjectionToken('ngx-skeleton-loader.config');\nclass NgxSkeletonLoaderComponent {\n  constructor(config) {\n    this.config = config;\n    const {\n      appearance = 'line',\n      animation = 'progress',\n      theme = null,\n      loadingText = 'Loading...',\n      count = 1,\n      ariaLabel = 'loading'\n    } = config || {};\n    this.appearance = appearance;\n    this.animation = animation;\n    this.theme = theme;\n    this.loadingText = loadingText;\n    this.count = count;\n    this.items = [];\n    this.ariaLabel = ariaLabel;\n  }\n  ngOnInit() {\n    start('NgxSkeletonLoader:Rendered');\n    start('NgxSkeletonLoader:Loaded');\n    this.validateInputValues();\n  }\n  validateInputValues() {\n    // Checking if it's receiving a numeric value (string having ONLY numbers or if it's a number)\n    if (!/^\\d+$/.test(`${this.count}`)) {\n      // Shows error message only in Development\n      if (isDevMode()) {\n        console.error(`\\`NgxSkeletonLoaderComponent\\` need to receive 'count' a numeric value. Forcing default to \"1\".`);\n      }\n      this.count = 1;\n    }\n    //Force count to 1 when custom-content is used\n    if (this.appearance === 'custom-content') {\n      // Shows error message only in Development\n      if (isDevMode() && this.count !== 1) {\n        console.error(`\\`NgxSkeletonLoaderComponent\\` enforces elements with \"custom-content\" appearance as DOM nodes. Forcing \"count\" to \"1\".`);\n        this.count = 1;\n      }\n    }\n    this.items.length = this.count;\n    const allowedAnimations = ['progress', 'progress-dark', 'pulse', 'false'];\n    if (allowedAnimations.indexOf(String(this.animation)) === -1) {\n      // Shows error message only in Development\n      if (isDevMode()) {\n        console.error(`\\`NgxSkeletonLoaderComponent\\` need to receive 'animation' as: ${allowedAnimations.join(', ')}. Forcing default to \"progress\".`);\n      }\n      this.animation = 'progress';\n    }\n    if (['circle', 'line', 'custom-content', ''].indexOf(String(this.appearance)) === -1) {\n      // Shows error message only in Development\n      if (isDevMode()) {\n        console.error(`\\`NgxSkeletonLoaderComponent\\` need to receive 'appearance' as: circle or line or custom-content or empty string. Forcing default to \"''\".`);\n      }\n      this.appearance = '';\n    }\n    if (Boolean(this.config?.theme?.extendsFromRoot) && this.theme !== null) {\n      // Shows error message only in Development\n      this.theme = {\n        ...this.config.theme,\n        ...this.theme\n      };\n    }\n  }\n  ngOnChanges(changes) {\n    // Avoiding multiple calls for the same input in case there's no changes in the fields\n    // Checking if the fields that require validation are available and if they were changed\n    // In case were not changed, we stop the function. Otherwise, `validateInputValues` will be called.\n    if (['count', 'animation', 'appearance'].find(key => changes[key] && (changes[key].isFirstChange() || changes[key].previousValue === changes[key].currentValue))) {\n      return;\n    }\n    this.validateInputValues();\n  }\n  ngAfterViewInit() {\n    end('NgxSkeletonLoader:Rendered');\n  }\n  ngOnDestroy() {\n    end('NgxSkeletonLoader:Loaded');\n  }\n}\n/** @nocollapse */\nNgxSkeletonLoaderComponent.ɵfac = function NgxSkeletonLoaderComponent_Factory(t) {\n  return new (t || NgxSkeletonLoaderComponent)(i0.ɵɵdirectiveInject(NGX_SKELETON_LOADER_CONFIG, 8));\n};\n/** @nocollapse */\nNgxSkeletonLoaderComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NgxSkeletonLoaderComponent,\n  selectors: [[\"ngx-skeleton-loader\"]],\n  inputs: {\n    count: \"count\",\n    loadingText: \"loadingText\",\n    appearance: \"appearance\",\n    animation: \"animation\",\n    ariaLabel: \"ariaLabel\",\n    theme: \"theme\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c1,\n  decls: 1,\n  vars: 1,\n  consts: [[\"class\", \"skeleton-loader\", \"aria-busy\", \"true\", \"aria-valuemin\", \"0\", \"aria-valuemax\", \"100\", \"role\", \"progressbar\", \"tabindex\", \"0\", 3, \"ngClass\", \"ngStyle\", 4, \"ngFor\", \"ngForOf\"], [\"aria-busy\", \"true\", \"aria-valuemin\", \"0\", \"aria-valuemax\", \"100\", \"role\", \"progressbar\", \"tabindex\", \"0\", 1, \"skeleton-loader\", 3, \"ngClass\", \"ngStyle\"], [4, \"ngIf\"]],\n  template: function NgxSkeletonLoaderComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵtemplate(0, NgxSkeletonLoaderComponent_div_0_Template, 2, 11, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.items);\n    }\n  },\n  dependencies: [i1.NgClass, i1.NgForOf, i1.NgIf, i1.NgStyle],\n  styles: [\".skeleton-loader[_ngcontent-%COMP%]{box-sizing:border-box;overflow:hidden;position:relative;background:rgb(239,241,246) no-repeat;border-radius:4px;width:100%;height:20px;display:inline-block;margin-bottom:10px;will-change:transform}.skeleton-loader[_ngcontent-%COMP%]:after, .skeleton-loader[_ngcontent-%COMP%]:before{box-sizing:border-box}.skeleton-loader.circle[_ngcontent-%COMP%]{width:40px;height:40px;margin:5px;border-radius:50%}.skeleton-loader.progress[_ngcontent-%COMP%], .skeleton-loader.progress-dark[_ngcontent-%COMP%]{transform:translateZ(0)}.skeleton-loader.progress[_ngcontent-%COMP%]:after, .skeleton-loader.progress[_ngcontent-%COMP%]:before, .skeleton-loader.progress-dark[_ngcontent-%COMP%]:after, .skeleton-loader.progress-dark[_ngcontent-%COMP%]:before{box-sizing:border-box}.skeleton-loader.progress[_ngcontent-%COMP%]:before, .skeleton-loader.progress-dark[_ngcontent-%COMP%]:before{animation:_ngcontent-%COMP%_progress 2s ease-in-out infinite;background-size:200px 100%;position:absolute;z-index:1;top:0;left:0;width:200px;height:100%;content:\\\"\\\"}.skeleton-loader.progress[_ngcontent-%COMP%]:before{background-image:linear-gradient(90deg,rgba(255,255,255,0),rgba(255,255,255,.6),rgba(255,255,255,0))}.skeleton-loader.progress-dark[_ngcontent-%COMP%]:before{background-image:linear-gradient(90deg,transparent,rgba(0,0,0,.2),transparent)}.skeleton-loader.pulse[_ngcontent-%COMP%]{animation:_ngcontent-%COMP%_pulse 1.5s cubic-bezier(.4,0,.2,1) infinite;animation-delay:.5s}.skeleton-loader.custom-content[_ngcontent-%COMP%]{height:100%;background:none}@media (prefers-reduced-motion: reduce){.skeleton-loader.pulse[_ngcontent-%COMP%], .skeleton-loader.progress-dark[_ngcontent-%COMP%], .skeleton-loader.custom-content[_ngcontent-%COMP%], .skeleton-loader.progress[_ngcontent-%COMP%]{animation:none}.skeleton-loader.progress[_ngcontent-%COMP%], .skeleton-loader.progress-dark[_ngcontent-%COMP%], .skeleton-loader.custom-content[_ngcontent-%COMP%]{background-image:none}}@keyframes _ngcontent-%COMP%_progress{0%{transform:translate3d(-200px,0,0)}to{transform:translate3d(calc(200px + 100vw),0,0)}}@keyframes _ngcontent-%COMP%_pulse{0%{opacity:1}50%{opacity:.4}to{opacity:1}}\"],\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxSkeletonLoaderComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-skeleton-loader',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<div\\n  *ngFor=\\\"let item of items\\\"\\n  class=\\\"skeleton-loader\\\"\\n  [attr.aria-label]=\\\"ariaLabel\\\"\\n  aria-busy=\\\"true\\\"\\n  aria-valuemin=\\\"0\\\"\\n  aria-valuemax=\\\"100\\\"\\n  [attr.aria-valuetext]=\\\"loadingText\\\"\\n  role=\\\"progressbar\\\"\\n  tabindex=\\\"0\\\"\\n  [ngClass]=\\\"{\\n  'custom-content': appearance === 'custom-content',\\n  circle: appearance === 'circle',\\n    progress: animation === 'progress',\\n    'progress-dark': animation === 'progress-dark',\\n    pulse: animation === 'pulse'\\n  }\\\"\\n  [ngStyle]=\\\"theme\\\"\\n>\\n  <ng-content *ngIf=\\\"appearance  === 'custom-content'\\\"></ng-content>\\n</div>\\n\\n\\n\\n\\n\",\n      styles: [\".skeleton-loader{box-sizing:border-box;overflow:hidden;position:relative;background:rgb(239,241,246) no-repeat;border-radius:4px;width:100%;height:20px;display:inline-block;margin-bottom:10px;will-change:transform}.skeleton-loader:after,.skeleton-loader:before{box-sizing:border-box}.skeleton-loader.circle{width:40px;height:40px;margin:5px;border-radius:50%}.skeleton-loader.progress,.skeleton-loader.progress-dark{transform:translateZ(0)}.skeleton-loader.progress:after,.skeleton-loader.progress:before,.skeleton-loader.progress-dark:after,.skeleton-loader.progress-dark:before{box-sizing:border-box}.skeleton-loader.progress:before,.skeleton-loader.progress-dark:before{animation:progress 2s ease-in-out infinite;background-size:200px 100%;position:absolute;z-index:1;top:0;left:0;width:200px;height:100%;content:\\\"\\\"}.skeleton-loader.progress:before{background-image:linear-gradient(90deg,rgba(255,255,255,0),rgba(255,255,255,.6),rgba(255,255,255,0))}.skeleton-loader.progress-dark:before{background-image:linear-gradient(90deg,transparent,rgba(0,0,0,.2),transparent)}.skeleton-loader.pulse{animation:pulse 1.5s cubic-bezier(.4,0,.2,1) infinite;animation-delay:.5s}.skeleton-loader.custom-content{height:100%;background:none}@media (prefers-reduced-motion: reduce){.skeleton-loader.pulse,.skeleton-loader.progress-dark,.skeleton-loader.custom-content,.skeleton-loader.progress{animation:none}.skeleton-loader.progress,.skeleton-loader.progress-dark,.skeleton-loader.custom-content{background-image:none}}@keyframes progress{0%{transform:translate3d(-200px,0,0)}to{transform:translate3d(calc(200px + 100vw),0,0)}}@keyframes pulse{0%{opacity:1}50%{opacity:.4}to{opacity:1}}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [NGX_SKELETON_LOADER_CONFIG]\n      }, {\n        type: Optional\n      }]\n    }];\n  }, {\n    count: [{\n      type: Input\n    }],\n    loadingText: [{\n      type: Input\n    }],\n    appearance: [{\n      type: Input\n    }],\n    animation: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input\n    }],\n    theme: [{\n      type: Input\n    }]\n  });\n})();\nclass NgxSkeletonLoaderModule {\n  static forRoot(config) {\n    return {\n      ngModule: NgxSkeletonLoaderModule,\n      providers: [{\n        provide: NGX_SKELETON_LOADER_CONFIG,\n        useValue: config\n      }]\n    };\n  }\n}\n/** @nocollapse */\nNgxSkeletonLoaderModule.ɵfac = function NgxSkeletonLoaderModule_Factory(t) {\n  return new (t || NgxSkeletonLoaderModule)();\n};\n/** @nocollapse */\nNgxSkeletonLoaderModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NgxSkeletonLoaderModule\n});\n/** @nocollapse */\nNgxSkeletonLoaderModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [CommonModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxSkeletonLoaderModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgxSkeletonLoaderComponent],\n      imports: [CommonModule],\n      exports: [NgxSkeletonLoaderComponent]\n    }]\n  }], null, null);\n})();\n\n/*\n * Public API Surface of ngx-skeleton-loader\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NGX_SKELETON_LOADER_CONFIG, NgxSkeletonLoaderComponent, NgxSkeletonLoaderModule };\n//# sourceMappingURL=ngx-skeleton-loader.mjs.map","map":{"version":3,"names":["i0","InjectionToken","isDevMode","Component","ChangeDetectionStrategy","Inject","Optional","Input","NgModule","start","end","i1","CommonModule","NGX_SKELETON_LOADER_CONFIG","NgxSkeletonLoaderComponent","constructor","config","appearance","animation","theme","loadingText","count","ariaLabel","items","ngOnInit","validateInputValues","test","console","error","length","allowedAnimations","indexOf","String","join","Boolean","extendsFromRoot","ngOnChanges","changes","find","key","isFirstChange","previousValue","currentValue","ngAfterViewInit","ngOnDestroy","ɵfac","ɵcmp","NgClass","NgForOf","NgIf","NgStyle","type","args","selector","changeDetection","OnPush","template","styles","undefined","decorators","NgxSkeletonLoaderModule","forRoot","ngModule","providers","provide","useValue","ɵmod","ɵinj","declarations","imports","exports"],"sources":["D:/Project/playcenterWebApp/node_modules/ngx-skeleton-loader/fesm2020/ngx-skeleton-loader.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, isDevMode, Component, ChangeDetectionStrategy, Inject, Optional, Input, NgModule } from '@angular/core';\nimport { start, end } from 'perf-marks/marks';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\nconst NGX_SKELETON_LOADER_CONFIG = new InjectionToken('ngx-skeleton-loader.config');\n\nclass NgxSkeletonLoaderComponent {\n    constructor(config) {\n        this.config = config;\n        const { appearance = 'line', animation = 'progress', theme = null, loadingText = 'Loading...', count = 1, ariaLabel = 'loading', } = config || {};\n        this.appearance = appearance;\n        this.animation = animation;\n        this.theme = theme;\n        this.loadingText = loadingText;\n        this.count = count;\n        this.items = [];\n        this.ariaLabel = ariaLabel;\n    }\n    ngOnInit() {\n        start('NgxSkeletonLoader:Rendered');\n        start('NgxSkeletonLoader:Loaded');\n        this.validateInputValues();\n    }\n    validateInputValues() {\n        // Checking if it's receiving a numeric value (string having ONLY numbers or if it's a number)\n        if (!/^\\d+$/.test(`${this.count}`)) {\n            // Shows error message only in Development\n            if (isDevMode()) {\n                console.error(`\\`NgxSkeletonLoaderComponent\\` need to receive 'count' a numeric value. Forcing default to \"1\".`);\n            }\n            this.count = 1;\n        }\n        //Force count to 1 when custom-content is used\n        if (this.appearance === 'custom-content') {\n            // Shows error message only in Development\n            if (isDevMode() && this.count !== 1) {\n                console.error(`\\`NgxSkeletonLoaderComponent\\` enforces elements with \"custom-content\" appearance as DOM nodes. Forcing \"count\" to \"1\".`);\n                this.count = 1;\n            }\n        }\n        this.items.length = this.count;\n        const allowedAnimations = ['progress', 'progress-dark', 'pulse', 'false'];\n        if (allowedAnimations.indexOf(String(this.animation)) === -1) {\n            // Shows error message only in Development\n            if (isDevMode()) {\n                console.error(`\\`NgxSkeletonLoaderComponent\\` need to receive 'animation' as: ${allowedAnimations.join(', ')}. Forcing default to \"progress\".`);\n            }\n            this.animation = 'progress';\n        }\n        if (['circle', 'line', 'custom-content', ''].indexOf(String(this.appearance)) === -1) {\n            // Shows error message only in Development\n            if (isDevMode()) {\n                console.error(`\\`NgxSkeletonLoaderComponent\\` need to receive 'appearance' as: circle or line or custom-content or empty string. Forcing default to \"''\".`);\n            }\n            this.appearance = '';\n        }\n        if (Boolean(this.config?.theme?.extendsFromRoot) && this.theme !== null) {\n            // Shows error message only in Development\n            this.theme = { ...this.config.theme, ...this.theme };\n        }\n    }\n    ngOnChanges(changes) {\n        // Avoiding multiple calls for the same input in case there's no changes in the fields\n        // Checking if the fields that require validation are available and if they were changed\n        // In case were not changed, we stop the function. Otherwise, `validateInputValues` will be called.\n        if (['count', 'animation', 'appearance'].find(key => changes[key] && (changes[key].isFirstChange() || changes[key].previousValue === changes[key].currentValue))) {\n            return;\n        }\n        this.validateInputValues();\n    }\n    ngAfterViewInit() {\n        end('NgxSkeletonLoader:Rendered');\n    }\n    ngOnDestroy() {\n        end('NgxSkeletonLoader:Loaded');\n    }\n}\n/** @nocollapse */ NgxSkeletonLoaderComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: NgxSkeletonLoaderComponent, deps: [{ token: NGX_SKELETON_LOADER_CONFIG, optional: true }], target: i0.ɵɵFactoryTarget.Component });\n/** @nocollapse */ NgxSkeletonLoaderComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.4\", type: NgxSkeletonLoaderComponent, selector: \"ngx-skeleton-loader\", inputs: { count: \"count\", loadingText: \"loadingText\", appearance: \"appearance\", animation: \"animation\", ariaLabel: \"ariaLabel\", theme: \"theme\" }, usesOnChanges: true, ngImport: i0, template: \"<div\\n  *ngFor=\\\"let item of items\\\"\\n  class=\\\"skeleton-loader\\\"\\n  [attr.aria-label]=\\\"ariaLabel\\\"\\n  aria-busy=\\\"true\\\"\\n  aria-valuemin=\\\"0\\\"\\n  aria-valuemax=\\\"100\\\"\\n  [attr.aria-valuetext]=\\\"loadingText\\\"\\n  role=\\\"progressbar\\\"\\n  tabindex=\\\"0\\\"\\n  [ngClass]=\\\"{\\n  'custom-content': appearance === 'custom-content',\\n  circle: appearance === 'circle',\\n    progress: animation === 'progress',\\n    'progress-dark': animation === 'progress-dark',\\n    pulse: animation === 'pulse'\\n  }\\\"\\n  [ngStyle]=\\\"theme\\\"\\n>\\n  <ng-content *ngIf=\\\"appearance  === 'custom-content'\\\"></ng-content>\\n</div>\\n\\n\\n\\n\\n\", styles: [\".skeleton-loader{box-sizing:border-box;overflow:hidden;position:relative;background:rgb(239,241,246) no-repeat;border-radius:4px;width:100%;height:20px;display:inline-block;margin-bottom:10px;will-change:transform}.skeleton-loader:after,.skeleton-loader:before{box-sizing:border-box}.skeleton-loader.circle{width:40px;height:40px;margin:5px;border-radius:50%}.skeleton-loader.progress,.skeleton-loader.progress-dark{transform:translateZ(0)}.skeleton-loader.progress:after,.skeleton-loader.progress:before,.skeleton-loader.progress-dark:after,.skeleton-loader.progress-dark:before{box-sizing:border-box}.skeleton-loader.progress:before,.skeleton-loader.progress-dark:before{animation:progress 2s ease-in-out infinite;background-size:200px 100%;position:absolute;z-index:1;top:0;left:0;width:200px;height:100%;content:\\\"\\\"}.skeleton-loader.progress:before{background-image:linear-gradient(90deg,rgba(255,255,255,0),rgba(255,255,255,.6),rgba(255,255,255,0))}.skeleton-loader.progress-dark:before{background-image:linear-gradient(90deg,transparent,rgba(0,0,0,.2),transparent)}.skeleton-loader.pulse{animation:pulse 1.5s cubic-bezier(.4,0,.2,1) infinite;animation-delay:.5s}.skeleton-loader.custom-content{height:100%;background:none}@media (prefers-reduced-motion: reduce){.skeleton-loader.pulse,.skeleton-loader.progress-dark,.skeleton-loader.custom-content,.skeleton-loader.progress{animation:none}.skeleton-loader.progress,.skeleton-loader.progress-dark,.skeleton-loader.custom-content{background-image:none}}@keyframes progress{0%{transform:translate3d(-200px,0,0)}to{transform:translate3d(calc(200px + 100vw),0,0)}}@keyframes pulse{0%{opacity:1}50%{opacity:.4}to{opacity:1}}\\n\"], dependencies: [{ kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: NgxSkeletonLoaderComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-skeleton-loader', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div\\n  *ngFor=\\\"let item of items\\\"\\n  class=\\\"skeleton-loader\\\"\\n  [attr.aria-label]=\\\"ariaLabel\\\"\\n  aria-busy=\\\"true\\\"\\n  aria-valuemin=\\\"0\\\"\\n  aria-valuemax=\\\"100\\\"\\n  [attr.aria-valuetext]=\\\"loadingText\\\"\\n  role=\\\"progressbar\\\"\\n  tabindex=\\\"0\\\"\\n  [ngClass]=\\\"{\\n  'custom-content': appearance === 'custom-content',\\n  circle: appearance === 'circle',\\n    progress: animation === 'progress',\\n    'progress-dark': animation === 'progress-dark',\\n    pulse: animation === 'pulse'\\n  }\\\"\\n  [ngStyle]=\\\"theme\\\"\\n>\\n  <ng-content *ngIf=\\\"appearance  === 'custom-content'\\\"></ng-content>\\n</div>\\n\\n\\n\\n\\n\", styles: [\".skeleton-loader{box-sizing:border-box;overflow:hidden;position:relative;background:rgb(239,241,246) no-repeat;border-radius:4px;width:100%;height:20px;display:inline-block;margin-bottom:10px;will-change:transform}.skeleton-loader:after,.skeleton-loader:before{box-sizing:border-box}.skeleton-loader.circle{width:40px;height:40px;margin:5px;border-radius:50%}.skeleton-loader.progress,.skeleton-loader.progress-dark{transform:translateZ(0)}.skeleton-loader.progress:after,.skeleton-loader.progress:before,.skeleton-loader.progress-dark:after,.skeleton-loader.progress-dark:before{box-sizing:border-box}.skeleton-loader.progress:before,.skeleton-loader.progress-dark:before{animation:progress 2s ease-in-out infinite;background-size:200px 100%;position:absolute;z-index:1;top:0;left:0;width:200px;height:100%;content:\\\"\\\"}.skeleton-loader.progress:before{background-image:linear-gradient(90deg,rgba(255,255,255,0),rgba(255,255,255,.6),rgba(255,255,255,0))}.skeleton-loader.progress-dark:before{background-image:linear-gradient(90deg,transparent,rgba(0,0,0,.2),transparent)}.skeleton-loader.pulse{animation:pulse 1.5s cubic-bezier(.4,0,.2,1) infinite;animation-delay:.5s}.skeleton-loader.custom-content{height:100%;background:none}@media (prefers-reduced-motion: reduce){.skeleton-loader.pulse,.skeleton-loader.progress-dark,.skeleton-loader.custom-content,.skeleton-loader.progress{animation:none}.skeleton-loader.progress,.skeleton-loader.progress-dark,.skeleton-loader.custom-content{background-image:none}}@keyframes progress{0%{transform:translate3d(-200px,0,0)}to{transform:translate3d(calc(200px + 100vw),0,0)}}@keyframes pulse{0%{opacity:1}50%{opacity:.4}to{opacity:1}}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [NGX_SKELETON_LOADER_CONFIG]\n                }, {\n                    type: Optional\n                }] }]; }, propDecorators: { count: [{\n                type: Input\n            }], loadingText: [{\n                type: Input\n            }], appearance: [{\n                type: Input\n            }], animation: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input\n            }], theme: [{\n                type: Input\n            }] } });\n\nclass NgxSkeletonLoaderModule {\n    static forRoot(config) {\n        return {\n            ngModule: NgxSkeletonLoaderModule,\n            providers: [{ provide: NGX_SKELETON_LOADER_CONFIG, useValue: config }],\n        };\n    }\n}\n/** @nocollapse */ NgxSkeletonLoaderModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: NgxSkeletonLoaderModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n/** @nocollapse */ NgxSkeletonLoaderModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.0.4\", ngImport: i0, type: NgxSkeletonLoaderModule, declarations: [NgxSkeletonLoaderComponent], imports: [CommonModule], exports: [NgxSkeletonLoaderComponent] });\n/** @nocollapse */ NgxSkeletonLoaderModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: NgxSkeletonLoaderModule, imports: [CommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: NgxSkeletonLoaderModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [NgxSkeletonLoaderComponent],\n                    imports: [CommonModule],\n                    exports: [NgxSkeletonLoaderComponent],\n                }]\n        }] });\n\n/*\n * Public API Surface of ngx-skeleton-loader\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NGX_SKELETON_LOADER_CONFIG, NgxSkeletonLoaderComponent, NgxSkeletonLoaderModule };\n//# sourceMappingURL=ngx-skeleton-loader.mjs.map\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}